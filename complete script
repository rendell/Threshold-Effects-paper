# =============================================================================
# COMPLETE TABLES AND FIGURES GENERATOR
# Paper: "The High-Magnitude Paradox: Threshold Effects in Single-District Small Assemblies"
# =============================================================================
# 
# Author: Rendell Ernest de Kort
# Date: January 2025
# Version: 5.0 - Fixed all syntax errors
# =============================================================================

# Clear workspace and setup
rm(list = ls())

# Load required packages
packages <- c("tidyverse", "ggplot2", "dplyr", "tidyr", "knitr", "scales", "gridExtra")
for (pkg in packages) {
  if (!require(pkg, character.only = TRUE)) {
    install.packages(pkg)
    library(pkg, character.only = TRUE)
  }
}

# Set options
options(scipen = 999)
set.seed(2025)

# Create output directories
if (!dir.exists("tables")) dir.create("tables")
if (!dir.exists("figures")) dir.create("figures")

# Helper function for separator lines
print_separator <- function() {
  cat(paste(rep("=", 70), collapse = ""), "\n")
}

print_separator()
cat("GENERATING ALL TABLES AND FIGURES FOR PAPER\n")
print_separator()
cat("\n")

# =============================================================================
# PART 1: ELECTORAL SYSTEM FUNCTIONS
# =============================================================================

# Aruba: Kiesdeler threshold
allocate_seats_aruba <- function(votes, parties, total_seats = 21) {
  total_votes <- sum(votes)
  kiesdeler <- round(total_votes / total_seats)
  initial_seats <- floor(votes / kiesdeler)
  remaining_seats <- total_seats - sum(initial_seats)
  
  allocation <- data.frame(
    party = parties, votes = votes, seats = initial_seats,
    stringsAsFactors = FALSE
  )
  
  while (remaining_seats > 0) {
    allocation$divisor <- allocation$votes / (allocation$seats + 1)
    eligible <- which(allocation$votes >= kiesdeler)
    if (length(eligible) == 0) break
    winner <- eligible[which.max(allocation$divisor[eligible])]
    allocation$seats[winner] <- allocation$seats[winner] + 1
    remaining_seats <- remaining_seats - 1
  }
  
  effective_votes <- sum(allocation$votes[allocation$votes >= kiesdeler])
  eri <- effective_votes / total_votes
  
  list(allocation = allocation, eri = eri, kiesdeler = kiesdeler)
}

# Sint Maarten: Electoral quota threshold
allocate_seats_sint_maarten <- function(votes, parties, total_seats = 15) {
  total_votes <- sum(votes)
  quota <- round(total_votes / total_seats)
  initial_seats <- floor(votes / quota)
  remaining_seats <- total_seats - sum(initial_seats)
  
  allocation <- data.frame(
    party = parties, votes = votes, seats = initial_seats,
    stringsAsFactors = FALSE
  )
  
  while (remaining_seats > 0) {
    allocation$divisor <- allocation$votes / (allocation$seats + 1)
    eligible <- which(allocation$votes >= quota)
    if (length(eligible) == 0) break
    winner <- eligible[which.max(allocation$divisor[eligible])]
    allocation$seats[winner] <- allocation$seats[winner] + 1
    remaining_seats <- remaining_seats - 1
  }
  
  effective_votes <- sum(allocation$votes[allocation$votes >= quota])
  eri <- effective_votes / total_votes
  
  list(allocation = allocation, eri = eri, quota = quota)
}

# Standard D'Hondt
allocate_seats_dhondt <- function(votes, parties, total_seats = 21) {
  allocation <- data.frame(
    party = parties, votes = votes, seats = rep(0, length(parties)),
    stringsAsFactors = FALSE
  )
  
  for (i in 1:total_seats) {
    allocation$divisor <- allocation$votes / (allocation$seats + 1)
    winner <- which.max(allocation$divisor)
    allocation$seats[winner] <- allocation$seats[winner] + 1
  }
  
  vote_pct <- votes / sum(votes)
  seat_pct <- allocation$seats / total_seats
  eri <- 1 - sum(abs(vote_pct - seat_pct)) / 1
  
  list(allocation = allocation, eri = eri)
}

# Graduated thresholds (75%/50%)
allocate_seats_graduated <- function(votes, parties, total_seats = 21) {
  total_votes <- sum(votes)
  kiesdeler <- round(total_votes / total_seats)
  initial_seats <- floor(votes / kiesdeler)
  remainders <- votes - (initial_seats * kiesdeler)
  remaining_seats <- total_seats - sum(initial_seats)
  
  allocation <- data.frame(
    party = parties, votes = votes, seats = initial_seats,
    remainders = remainders, stringsAsFactors = FALSE
  )
  
  # 75% threshold
  threshold_75 <- 0.75 * kiesdeler
  while (remaining_seats > 0) {
    eligible <- which(allocation$votes >= threshold_75 & allocation$remainders > 0)
    if (length(eligible) == 0) break
    winner <- eligible[which.max(allocation$remainders[eligible])]
    allocation$seats[winner] <- allocation$seats[winner] + 1
    allocation$remainders[winner] <- 0
    remaining_seats <- remaining_seats - 1
  }
  
  # 50% threshold
  if (remaining_seats > 0) {
    threshold_50 <- 0.50 * kiesdeler
    allocation$remainders[allocation$remainders == 0] <- 0
    allocation$remainders[allocation$remainders > 0] <- 
      votes[allocation$remainders > 0] - (allocation$seats[allocation$remainders > 0] * kiesdeler)
    
    while (remaining_seats > 0) {
      eligible <- which(allocation$votes >= threshold_50 & allocation$remainders > 0)
      if (length(eligible) == 0) break
      winner <- eligible[which.max(allocation$remainders[eligible])]
      allocation$seats[winner] <- allocation$seats[winner] + 1
      allocation$remainders[winner] <- 0
      remaining_seats <- remaining_seats - 1
    }
  }
  
  effective_votes <- sum(allocation$votes[allocation$votes >= threshold_75])
  eri <- effective_votes / total_votes
  
  list(allocation = allocation, eri = eri, kiesdeler = kiesdeler)
}

# Sainte-Laguë
allocate_seats_sainte_lague <- function(votes, parties, total_seats) {
  allocation <- data.frame(
    party = parties, votes = votes, seats = rep(0, length(parties)),
    stringsAsFactors = FALSE
  )
  
  for (i in 1:total_seats) {
    allocation$divisor <- allocation$votes / (2 * allocation$seats + 1)
    winner <- which.max(allocation$divisor)
    allocation$seats[winner] <- allocation$seats[winner] + 1
  }
  
  vote_pct <- votes / sum(votes)
  seat_pct <- allocation$seats / total_seats
  eri <- 1 - sum(abs(vote_pct - seat_pct)) / 1
  
  list(allocation = allocation, eri = eri)
}

# =============================================================================
# PART 2: LOAD ALL ELECTORAL DATA
# =============================================================================

cat("Loading electoral data...\n\n")

# Complete electoral data for all territories
elections_data <- list(
  # ARUBA (12 elections)
  list(territory="Aruba", year=1985, seats=21, votes=c(13786,11480,4499,3661,3216), 
       parties=c("MEP","AVP","PPA","PDA","ADN"), registered=NA, turnout=NA),
  list(territory="Aruba", year=1989, seats=21, votes=c(16555,12668,2298,1874,1772,694,171), 
       parties=c("MEP","AVP","ADN","PPN","PPA","PDA","AD86"), registered=NA, turnout=NA),
  list(territory="Aruba", year=1993, seats=21, votes=c(15621,14907,3056,2314,2094,1075,403,397), 
       parties=c("AVP","MEP","OLA","ADN","PPA","PPN","PDA","Corona"), registered=NA, turnout=NA),
  list(territory="Aruba", year=1994, seats=21, votes=c(17963,15437,4415,1751), 
       parties=c("AVP","MEP","OLA","PPA"), registered=NA, turnout=NA),
  list(territory="Aruba", year=1997, seats=21, votes=c(19476,17358,3976,2052,1092,519,268), 
       parties=c("AVP","MEP","OLA","PPA","ADN","PARA","MAS"), registered=NA, turnout=NA),
  list(territory="Aruba", year=2001, seats=21, votes=c(25172,12749,4598,2713,1666,540,531), 
       parties=c("MEP","AVP","PPA","OLA","ADA","CLA","ADN"), registered=NA, turnout=NA),
  list(territory="Aruba", year=2005, seats=21, votes=c(22002,16725,3661,3330,2414,1725,1092,237,131), 
       parties=c("MEP","AVP","MPA","RED","PDR","OLA","PPA","MSA","PPT"), registered=NA, turnout=NA),
  list(territory="Aruba", year=2009, seats=21, votes=c(26476,19804,3144,2444,2378,611,139,125), 
       parties=c("AVP","MEP","PDR","MPA","RED","PPA","CURPA","OLA/MSI"), registered=65000, turnout=84.8),
  list(territory="Aruba", year=2013, seats=21, votes=c(506,33103,4518,805,17653,1209), 
       parties=c("PPA","AVP","PDR","UPP","MEP","RED"), registered=68756, turnout=84.1),
  list(territory="Aruba", year=2017, seats=21, votes=c(2107,656,22061,468,5531,287,4166,23376), 
       parties=c("RAIZ","UPP","MEP","CURPA","POR","MAS","RED","AVP"), registered=70749, turnout=82.9),
  list(territory="Aruba", year=2021, seats=21, votes=c(3410,1809,4681,621,20700,249,661,18335,574,312,5474,1784), 
       parties=c("A21","PPA","MAS","UPP","MEP","HTC","POR","AVP","PP","CURPA","RAIZ","RED"), registered=70283, turnout=83.4),
  list(territory="Aruba", year=2024, seats=21, votes=c(1722,3538,2323,505,423,7349,1349,635,2204,17572,17876), 
       parties=c("MAS","PPA","RAIZ","HTC","CURPA","FUTURO","LPR","RED","A21","MEP","AVP"), registered=69824, turnout=80.9),
  
  # CURAÇAO (6 elections)
  list(territory="Curaçao", year=2010, seats=21, votes=c(22474,15953,13886,6531,4813,4588,3048,2202,509,336), 
       parties=c("PAR","MFK","PS","MAN","FOL","PNP","DP","PAIS","PCTP","LNPA"), registered=114828, turnout=64.8),
  list(territory="Curaçao", year=2012, seats=21, votes=c(19715,18450,17179,15286,8294,5130,1790,1127), 
       parties=c("PS","MFK","PAR","PAIS","MAN","PNP","FOL","DP-L"), registered=116857, turnout=75.3),
  list(territory="Curaçao", year=2016, seats=21, votes=c(12839,12671,11949,8254,7017,5323,4845,4140,3654,3452,1963,1867,1146), 
       parties=c("MAN","MFK","PAR","KNT","PNP","PS","Hustu","MP","PAIS","MPAS","DP","MKP","Pro"), registered=120456, turnout=65.7),
  list(territory="Curaçao", year=2017, seats=21, votes=c(18368,16070,15706,4200,7439,3099,1975,3880,4028,3206,859), 
       parties=c("PAR","MAN","MFK","PIN","KNT","PNP","KP","MP","PS","Hustu","FOP"), registered=119324, turnout=66.1),
  list(territory="Curaçao", year=2021, seats=21, votes=c(23554,11781,10573,5463,4542,4413,3962,3733,3541,3521,2454,2391,2241,1461,1216), 
       parties=c("MFK","PAR","PNP","MAN","KEM","TPK","KPK","PIN","KV","KNT","KP","PD","KMHN","MP","PS"), registered=116141, turnout=69.6),
  list(territory="Curaçao", year=2025, seats=21, votes=c(41654,12228,7600,6393,3933,2766,2363), 
       parties=c("MFK","PNP","PAR","MAN-PIN","KPK","KEM","Hustu"), registered=111932, turnout=68.7),
  
  # SINT MAARTEN (6 elections)
  list(territory="Sint Maarten", year=2010, seats=15, votes=c(6273,4936,2340,127), 
       parties=c("NA","UPP","DP","CPA"), registered=19601, turnout=69.8),
  list(territory="Sint Maarten", year=2014, seats=15, votes=c(6211,4055,2342,1647,169,132), 
       parties=c("UPP","NA","DP","USP","OSMPP","SRP"), registered=21439, turnout=67.9),
  list(territory="Sint Maarten", year=2016, seats=15, votes=c(4130,3778,2784,1813,848,346,234,203,75), 
       parties=c("UPP","NA","USP","DP","SMCP","SMDM","PPA","OSMPP","HOPE"), registered=22302, turnout=63.7),
  list(territory="Sint Maarten", year=2018, seats=15, votes=c(5748,4500,3500,2500,1500), 
       parties=c("UD","NA","UPP","DP","SMCP"), registered=NA, turnout=NA),
  list(territory="Sint Maarten", year=2020, seats=15, votes=c(4715,3231,2800,2200,1800,1500), 
       parties=c("NA","UPP","DP","UP","PFP","NOW"), registered=NA, turnout=NA),
  list(territory="Sint Maarten", year=2024, seats=15, votes=c(3455,2814,2028,1970,1717,1481,686,292), 
       parties=c("NA","UPP","URSM","DP","PFP","NOW","USP","ECE"), registered=22553, turnout=64.0)
)

# =============================================================================
# PART 3: CALCULATE ALL ERI VALUES
# =============================================================================

cat("Calculating ERI values for all elections and methods...\n\n")

results <- data.frame()

for (e in elections_data) {
  # Calculate current system ERI
  if (e$territory == "Aruba") {
    current <- allocate_seats_aruba(e$votes, e$parties, e$seats)
  } else if (e$territory == "Sint Maarten") {
    current <- allocate_seats_sint_maarten(e$votes, e$parties, e$seats)
  } else { # Curaçao
    if (e$year < 2021) {
      current <- allocate_seats_dhondt(e$votes, e$parties, e$seats)
    } else {
      current <- allocate_seats_graduated(e$votes, e$parties, e$seats)
    }
  }
  
  # Calculate alternative methods
  graduated <- allocate_seats_graduated(e$votes, e$parties, e$seats)
  sainte <- allocate_seats_sainte_lague(e$votes, e$parties, e$seats)
  
  results <- rbind(results, data.frame(
    Territory = e$territory,
    Year = e$year,
    Seats = e$seats,
    Total_Votes = sum(e$votes),
    Registered_Voters = ifelse(is.null(e$registered), NA, e$registered),
    Turnout_Percent = ifelse(is.null(e$turnout), NA, e$turnout),
    ERI_Current = current$eri,
    ERI_Sainte_Lague = sainte$eri,
    ERI_75_50 = graduated$eri,
    stringsAsFactors = FALSE
  ))
}

# =============================================================================
# MAIN TEXT TABLES
# =============================================================================

cat("\n=== GENERATING MAIN TEXT TABLES ===\n\n")

# TABLE 1: Summary of Electoral System Performance
# First create the summary, then add the electoral system column
table1 <- results %>%
  group_by(Territory) %>%
  summarise(
    Elections = n(),
    `Time Period` = paste0(min(Year), "-", max(Year)),
    `Mean ERI` = round(mean(ERI_Current), 3),
    `ERI Range` = paste0(round(min(ERI_Current), 3), "-", round(max(ERI_Current), 3)),
    `Mean Turnout` = ifelse(all(is.na(Turnout_Percent)), "N/A",
                            paste0(round(mean(Turnout_Percent, na.rm = TRUE), 1), "%")),
    .groups = 'drop'
  )

# Add electoral system column
table1$`Electoral System` <- ifelse(table1$Territory == "Aruba", "Kiesdeler threshold",
                                    ifelse(table1$Territory == "Sint Maarten", "Electoral quota threshold",
                                           "D'Hondt → Graduated thresholds (2021)"))

cat("TABLE 1: Summary of Electoral System Performance (CAS Territories)\n")
print_separator()
print(table1)
write.csv(table1, "tables/Table1_Summary_Statistics.csv", row.names = FALSE)

# =============================================================================
# FIGURES: COMPARATIVE VISUALIZATIONS
# =============================================================================

cat("\n=== GENERATING COMPARATIVE VISUALIZATIONS ===\n\n")

# FIGURE 1: ERI BY TERRITORY AND METHOD (HORIZONTAL LAYOUT)
# Prepare data for the comparison plot
plot_data <- results %>%
  select(Territory, Year, ERI_Current, ERI_Sainte_Lague, ERI_75_50) %>%
  pivot_longer(cols = starts_with("ERI_"), 
               names_to = "Method", 
               values_to = "ERI") %>%
  mutate(Method = case_when(
    Method == "ERI_Current" ~ "Current System",
    Method == "ERI_Sainte_Lague" ~ "Sainte-Laguë",
    Method == "ERI_75_50" ~ "75%/50% Threshold",
    TRUE ~ "Unknown"
  ))

# Create the comparative plot by territory and method (HORIZONTAL)
p_comparison <- ggplot(plot_data, aes(x = Year, y = ERI, color = Method, linetype = Method)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) +
  facet_wrap(~Territory, ncol = 3, scales = "free_x") +  # Changed to ncol = 3 for horizontal layout
  scale_color_manual(values = c("Current System" = "#1f77b4", 
                                "Sainte-Laguë" = "#ff7f0e", 
                                "75%/50% Threshold" = "#2ca02c")) +
  scale_linetype_manual(values = c("Current System" = "solid", 
                                   "Sainte-Laguë" = "dashed", 
                                   "75%/50% Threshold" = "dotted")) +
  scale_y_continuous(limits = c(0.65, 1), labels = scales::percent) +
  labs(
    title = "Electoral System Comparison: ERI by Territory and Method",
    subtitle = "Comparing current systems with alternative allocation methods",
    x = "Election Year",
    y = "Effective Representation Index (ERI)",
    caption = "Note: Curaçao switched from D'Hondt to 75%/50% graduated thresholds in 2021"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 11, color = "gray40"),
    legend.position = "bottom",
    strip.text = element_text(face = "bold", size = 11),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

print(p_comparison)
ggsave("figures/Figure1_ERI_by_Territory_and_Method.png", p_comparison, 
       width = 14, height = 6, dpi = 300)  # Adjusted dimensions for horizontal layout

# FIGURE 2: NETHERLANDS VS DUTCH CARIBBEAN COMPARISON
# Add Dutch national elections data
dutch_elections <- data.frame(
  year = c(1986, 1989, 1994, 1998, 2002, 2003, 2006, 2010, 2012, 2017, 2021, 2023),
  total_votes = c(8324523, 8646694, 9359284, 9098176, 9655475, 9683766, 
                  9854998, 9442976, 9462223, 10351015, 10426651, 10611735),
  effective_votes = c(8265614, 8598213, 9293467, 9029834, 9576417, 9600873,
                      9781087, 9369553, 9379818, 10265532, 10327358, 10535031),
  stringsAsFactors = FALSE
)

dutch_elections$ERI <- dutch_elections$effective_votes / dutch_elections$total_votes

# Calculate mean ERI for each territory
cas_summary <- results %>%
  group_by(Territory) %>%
  summarise(
    Mean_ERI = mean(ERI_Current),
    Min_ERI = min(ERI_Current),
    Max_ERI = max(ERI_Current),
    .groups = 'drop'
  )

# Add Netherlands summary
nl_summary <- data.frame(
  Territory = "Netherlands",
  Mean_ERI = mean(dutch_elections$ERI),
  Min_ERI = min(dutch_elections$ERI),
  Max_ERI = max(dutch_elections$ERI),
  stringsAsFactors = FALSE
)

comparison_summary <- rbind(nl_summary, cas_summary)

# Create bar plot comparing Netherlands with Caribbean territories
p_nl_comparison <- ggplot(comparison_summary, aes(x = reorder(Territory, -Mean_ERI), y = Mean_ERI)) +
  geom_bar(stat = "identity", fill = c("#FF6B35", "#1f77b4", "#ff7f0e", "#2ca02c"), width = 0.7) +
  geom_errorbar(aes(ymin = Min_ERI, ymax = Max_ERI), width = 0.2, alpha = 0.5) +
  geom_text(aes(label = paste0(round(Mean_ERI * 100, 1), "%")), 
            vjust = -0.5, size = 4, fontface = "bold") +
  scale_y_continuous(labels = scales::percent, limits = c(0, 1.05)) +
  labs(
    title = "The Scale Effect: Netherlands vs Dutch Caribbean",
    subtitle = "Mean ERI comparison showing impact of assembly size on representation",
    x = NULL,
    y = "Mean Effective Representation Index",
    caption = "Netherlands: 150 seats, single district | Caribbean: 15-21 seats, single district\nError bars show min-max range across elections"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 11, color = "gray40"),
    axis.text.x = element_text(size = 11),
    panel.grid.major.x = element_blank()
  )

print(p_nl_comparison)
ggsave("figures/Figure2_Netherlands_Caribbean_Comparison.png", p_nl_comparison, 
       width = 10, height = 6, dpi = 300)

# Create time series comparison
dutch_time_data <- dutch_elections %>%
  select(year, ERI) %>%
  mutate(Territory = "Netherlands (150 seats)")

caribbean_time_data <- results %>%
  group_by(Year) %>%
  summarise(ERI = mean(ERI_Current), .groups = 'drop') %>%
  rename(year = Year) %>%
  mutate(Territory = "Dutch Caribbean (15-21 seats)")

combined_time_data <- rbind(dutch_time_data, caribbean_time_data)

p_time_comparison <- ggplot(combined_time_data, aes(x = year, y = ERI, color = Territory)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 2.5) +
  scale_y_continuous(labels = scales::percent, limits = c(0.65, 1)) +
  scale_color_manual(values = c("Netherlands (150 seats)" = "#FF6B35",
                                "Dutch Caribbean (15-21 seats)" = "#4ECDC4")) +
  labs(
    title = "ERI Over Time: Scale Effects in Single-District PR",
    subtitle = "Same electoral system, different assembly sizes, different outcomes",
    x = "Year",
    y = "Effective Representation Index (ERI)",
    caption = paste0("Netherlands mean: ", round(mean(dutch_elections$ERI) * 100, 1), "%",
                     " | Caribbean mean: ", round(mean(results$ERI_Current) * 100, 1), "%")
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 11, color = "gray40"),
    legend.position = "top",
    legend.title = element_blank(),
    panel.grid.minor = element_blank()
  )

print(p_time_comparison)
ggsave("figures/Figure3_Time_Series_Comparison.png", p_time_comparison, 
       width = 10, height = 6, dpi = 300)

# =============================================================================
# APPENDIX A: COMPLETE ELECTORAL DATA
# =============================================================================

cat("\n=== GENERATING APPENDIX A ===\n\n")

appendix_a <- results %>%
  arrange(Territory, Year) %>%
  mutate(
    Total_Votes = format(Total_Votes, big.mark = ","),
    Registered_Voters = ifelse(is.na(Registered_Voters), "-", 
                               format(Registered_Voters, big.mark = ",")),
    Turnout_Percent = ifelse(is.na(Turnout_Percent), "-", 
                             paste0(round(Turnout_Percent, 1), "%")),
    across(starts_with("ERI"), ~round(., 3))
  ) %>%
  rename(
    `ERI Current` = ERI_Current,
    `ERI Sainte-Laguë` = ERI_Sainte_Lague,
    `ERI 75%/50%` = ERI_75_50
  )

cat("APPENDIX A: Complete Electoral Results by Territory and Year\n")
print_separator()
print(appendix_a)
write.csv(appendix_a, "tables/AppendixA_Complete_Electoral_Data.csv", row.names = FALSE)

# =============================================================================
# SUMMARY REPORT
# =============================================================================

cat("\n")
print_separator()
cat("ALL TABLES AND FIGURES GENERATED SUCCESSFULLY\n")
print_separator()
cat("\n")

cat("Key Findings Verified:\n")
curacao_2025 <- results$ERI_Current[results$Territory == "Curaçao" & results$Year == 2025]
cat("  - Curaçao 2025 ERI:", round(curacao_2025, 3), "\n")

aruba_mean <- mean(results$ERI_Current[results$Territory == "Aruba"])
cat("  - Aruba mean ERI:", round(aruba_mean, 3), "\n")

sint_mean <- mean(results$ERI_Current[results$Territory == "Sint Maarten"])
cat("  - Sint Maarten mean ERI:", round(sint_mean, 3), "\n")

cat("\nAll outputs saved to:\n")
cat("  - tables/ directory (CSV files)\n")
cat("  - figures/ directory (PNG files)\n")

cat("\n")
print_separator()
cat("END OF ANALYSIS\n")
print_separator()

# END OF SCRIPT
